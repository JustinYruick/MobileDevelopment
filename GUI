import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;

//@author Justin & Loai

public class Main extends JFrame 
{

	
	// standard boilerplate code often seen
	static Connection myConnection = null;
	static Statement myStmtement = null;
	static ResultSet myResult = null;
	static PreparedStatement mypreparedStatment = null;
    
	
	public static void main(String[] args)
	{
		// TODO Auto-generated method stub

		//variable 
		String actorFirstName = "";
		String actorLastName = "";
		//JButton btnBackMain = new JButton("Main Menu");
		
	
        //MarkFormatter will be used in the below code as a data validation method
		MaskFormatter mask = null;
        try {
            // Create a MaskFormatter for accepting phone number, the # symbol accept
            // only a number. We can also set the empty value with a place holder
            // character.
            mask = new MaskFormatter("U????????????????????????????????????????????"); //VARCHAR(45) with capitalized first letter
            mask.setPlaceholderCharacter(' ');
        } catch (ParseException e) {
            e.printStackTrace();
            System.out.println("Caught ParseException...");
        }
		
        try
		{
		///creating connection
			myConnection = DriverManager.getConnection(
					         "jdbc:mysql://localhost:3306/sakila?useSSL=false&allowPublicKeyRetrieval=true", 
					                       "root","password");
		
		//Creating statment
		myStmtement = myConnection.createStatement();
		//------------------------------------
		//------------Main Frame--------------
		//------------------------------------
		//Boiler plate
		JFrame frameMain = new JFrame("Sakila DVD Rental Store");
		frameMain.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frameMain.setSize(600,400);
		frameMain.setLayout(new GridLayout(3,1,10,10));
		frameMain.setLocationRelativeTo(null);
	    
		//Creates Panels and add to Frame
	    JPanel mainPanelTop = new JPanel(new GridLayout(1,1));
	    JPanel mainPanelConent = new JPanel(new GridLayout(2,2));
	    JPanel mainPanelBottom = new JPanel(new GridLayout(1,1));
	    frameMain.add(mainPanelTop);
	    frameMain.add(mainPanelConent);
	    frameMain.add(mainPanelBottom);
	    
	    //creates GUI elements
	    JLabel lblTitle = new JLabel("                                                                     Welcome to KLJS Movie Rental");
	    lblTitle.setAlignmentX(400);
	    lblTitle.setAlignmentY(300);
	    JButton btnCustomer = new JButton("Add Customer");
	    btnCustomer.setSize(20, 20);
	    JButton btnActor = new JButton("Add Actor");
	    btnActor.setSize(20, 20);
	    JButton btnFilm = new JButton("Add New Film");
	    btnFilm.setSize(20, 20);
	    JButton btnRental = new JButton("Add Movie Rental");
	    btnRental.setSize(20, 20);
	    JButton btnReport = new JButton("Display rental Income");
	    btnReport.setSize(20, 20);
	    
	    //Adds the elements to the panels
	    mainPanelTop.add(lblTitle);
	    mainPanelConent.add(btnCustomer);
	    mainPanelConent.add(btnActor);
	    mainPanelConent.add(btnFilm);
	    mainPanelConent.add(btnRental);
	    mainPanelBottom.add(btnReport);
	    
	    
	    //------------------------------------
	    //-----------Customer Frame-----------
	    //------------------------------------
	    JFrame frameCust = new JFrame("Add A Customer to the Database");
	    frameCust.setSize(800,500);
	    frameCust.setLayout(new GridLayout(3,1));
	    frameCust.setLocationRelativeTo(null);
	    
	    //variables for frame
	    String[] cityList = {};
		String[] provinceList= {};
		String[] countryList= {};
	    
	    //Create and adds the panels to the frame
		JPanel custPanelTop = new JPanel(new GridLayout(1,1));
		JPanel custPanelContent = new JPanel(new GridLayout(8,2));
		JPanel custPanelBot = new JPanel(new GridLayout(2,1));
		frameCust.add(custPanelTop);
		frameCust.add(custPanelContent);
		frameCust.add(custPanelBot);
		
		//GUI element 
        JLabel lbl_cTitle = new JLabel("Enter Customer information");
        JLabel lbl_cFirstName = new JLabel("First Name:");
        JLabel lbl_cLastName = new JLabel("Last Name:");
        JLabel lbl_cEmail = new JLabel("Email Address:");
        JLabel lbl_cCity = new JLabel("City:");
        JLabel lbl_cDistrict = new JLabel("District:");
        JLabel lbl_cAddress = new JLabel("Address:");
        JLabel lbl_cAddress2 = new JLabel("Address2:");
        JTextField tf_cFirstName = new JTextField();
        JTextField tf_cLastName = new JTextField();
        JTextField tf_cEmailAddress = new JTextField();
        JTextField tf_cAddress = new JTextField();
        JTextField tf_cAddress2 = new JTextField();
        JTextField tf_cDistrict = new JTextField();
        JComboBox<?> cb_cCuty = new JComboBox<Object>(cityList);
        JButton btn_cAdd = new JButton("Add Cusotmer");
        JButton btn_cToMain = new JButton("Back to Main");
        
        //adds the elements to the panels
        custPanelTop.add(lbl_cTitle);
        custPanelContent.add(lbl_cFirstName);
        custPanelContent.add(tf_cFirstName);
        custPanelContent.add(lbl_cLastName);
        custPanelContent.add(tf_cLastName);
        custPanelContent.add(lbl_cEmail);
        custPanelContent.add(tf_cEmailAddress);
        custPanelContent.add(lbl_cAddress);
        custPanelContent.add(tf_cAddress);
        custPanelContent.add(lbl_cAddress2);
        custPanelContent.add(tf_cAddress2);
        custPanelContent.add(lbl_cCity);
        custPanelContent.add(cb_cCuty);
        custPanelContent.add(lbl_cDistrict);
        custPanelContent.add(tf_cDistrict);
        custPanelBot.add(btn_cAdd);
        custPanelBot.add(btn_cToMain);
		
	

		//------------------------------------
		//------------Customer PopUp--------------
		//------------------------------------
		//Boiler plate
		JFrame CustPopUp = new JFrame("Customer Adding Status");
		CustPopUp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		CustPopUp.setSize(200,100);
		CustPopUp.setLayout(new GridLayout(1,1,10,10));
		CustPopUp.setLocationRelativeTo(null);
		
		//creates and adds panel to frame
		JPanel CpPopup = new JPanel(new GridLayout(1,1));
		CustPopUp.add(CpPopup);
		
		//element declatation
		JLabel lbl_CpStatus = new JLabel("Samlpe output");
		
		//adds elements to panel
		CpPopup.add(lbl_CpStatus);
		
		
		//------------------------------------
	    //------------Actor Frame-------------
	    //------------------------------------
		
		//boiler plate code
		JFrame frameActor = new JFrame("Add A Actor to the Database");
		frameActor.setSize(600,400);
		frameActor.setLayout(new GridLayout(3,1,10,10));
		frameActor.setLocationRelativeTo(null);
		
		//creates the panels and adds the to the frame
		JPanel actorPanelTop = new JPanel(new GridLayout(1,1));
		JPanel actorPanelContent = new JPanel(new GridLayout(2,2));
		JPanel actorPanelBot = new JPanel(new GridLayout(2,1));
		frameActor.add(actorPanelTop);
		frameActor.add(actorPanelContent);
		frameActor.add(actorPanelBot);
		
		//creates the elements 
		JLabel lbl_aTitle = new JLabel("Please enter Actors first and last name");
		JLabel lbl_aFirst = new JLabel("First Name:");
		JLabel lbl_aLast = new JLabel("Last Name:");
		JButton btn_aAdd = new JButton("Add");
		JTextField tf_aFirst = new JTextField(15);
		JTextField tf_aLast = new JTextField(15);
        JButton btn_aToMain = new JButton("Back to Main");
        
        //JFormattedTextField tf_aFirst = new JFormattedTextField(mask);
		//JFormattedTextField tf_aLast = new JFormattedTextField(mask);
		
		//adds elements for the panel
		actorPanelTop.add(lbl_aTitle);
		actorPanelContent.add(lbl_aFirst);
		actorPanelContent.add(tf_aFirst);
		actorPanelContent.add(lbl_aLast);
		actorPanelContent.add(tf_aLast);
		actorPanelBot.add(btn_aAdd);
		actorPanelBot.add(btn_aToMain);
		
	    //------------------------------------
	    //Add Actor Button
	  	//add an actor to the database
	  	//------------------------------------
	    btn_aAdd.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    	   //System.out.println("I am here");
	    		String first_name_SQL = tf_aFirst.getText();
	    		String last_name_SQL = tf_aLast.getText();
	    		Statement statement_add_actor = null;
	    		String query_add_actor ="INSERT INTO sakila.actor(first_name,last_name)VALUES (\""+first_name_SQL+"\",\""+last_name_SQL+"\");";
	    		Connection Connection_add_actor= null;
	    		
				try {
						Connection_add_actor = DriverManager.getConnection(
					         "jdbc:mysql://localhost:3306/sakila?useSSL=false&allowPublicKeyRetrieval=true", 
					                       "root","password");
						statement_add_actor = Connection_add_actor.createStatement();
						statement_add_actor.executeUpdate(query_add_actor);
					 	
						tf_aFirst.setText("");
						tf_aLast.setText("");
					

				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}finally {
					if(Connection_add_actor != null)
					{
						try {
							Connection_add_actor.close();
						} catch (SQLException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
			        if (statement_add_actor != null) { try {
						statement_add_actor.close();
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} }
			    }
	        }
	    });
		
		
		//------------------------------------
	    //------------Actor Popup-------------
	    //------------------------------------
		
		//boiler plate code
		JFrame popupActor = new JFrame("Actors for the film");
		popupActor.setSize(350,200);
		popupActor.setLayout(new GridLayout(3,1,10,10));
		popupActor.setLocationRelativeTo(null);
		
		//creates the panels and adds them to the frame
		JPanel popupPanelTop = new JPanel(new GridLayout(1,1));
		JPanel popupPanelContent = new JPanel(new GridLayout(2,2));
		JPanel popupPanelBot = new JPanel(new GridLayout(2,1));
		popupActor.add(popupPanelTop);
		popupActor.add(popupPanelContent);
		popupActor.add(popupPanelBot);
		
		//creates the elements 
		JLabel lbl_pTitle = new JLabel("Please enter Actors Name from the film");
		JLabel lbl_pFirst = new JLabel("First Name:");
		JLabel lbl_pLast = new JLabel("Last Name:");
		JButton btn_pAdd = new JButton("Add");
		JButton btn_pDone = new JButton("Done");
		JTextField tf_pFirst = new JTextField();
		JTextField tf_pLast = new JTextField();
		
		//adds the elements to the panels
		popupPanelTop.add(lbl_pTitle);
		popupPanelContent.add(lbl_pFirst);
		popupPanelContent.add(tf_pFirst);
		popupPanelContent.add(lbl_pLast);
		popupPanelContent.add(tf_pLast);
		popupPanelBot.add(btn_pAdd);
		popupPanelBot.add(btn_pDone);
	    
		
		btn_pAdd.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		String first_name_actor_= tf_pFirst.getText();
	    		String last_name_actor_ =tf_pLast.getText();
	    		
	    		String SQL_ADD_film_actors = "INSERT INTO sakila.actor(first_name,last_name) VALUES (\""+first_name_actor_+"\",\""+last_name_actor_+"\");";
	    		
	    		String SQL_Junction_ator_film = "INSERT INTO sakila.film_actor(actor_id,film_id)VALUES((LAST_INSERT_ID()),(SELECT film_id FROM sakila.film WHERE title = \"ShanMo\"));";
	    		
	    		Connection add_film_actor_Connection = null ;
	    		Statement add_Actor_Statment = null;
	    		
				try {
					add_film_actor_Connection = DriverManager.getConnection(
					         "jdbc:mysql://localhost:3306/sakila?useSSL=false&allowPublicKeyRetrieval=true", 
		                       "root","password");
					
					add_Actor_Statment = add_film_actor_Connection.createStatement();
					add_Actor_Statment.executeUpdate(SQL_ADD_film_actors);
				 	
					tf_pFirst.setText("");
					tf_pLast.setText("");
					
					//HAVE To add them to a junction file. 
					//add_Actor_Statment.executeUpdate(sql)

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    		
	    		
	    		
	    		
	    		
	        }
	    });
	    
		
		//------------------------------------
	    //------------Film Frame--------------
	    //------------------------------------
		
		//boiler plate code
		JFrame frameFilm = new JFrame("Add A Film to the Database");
		frameFilm.setSize(800,500);
		frameFilm.setLayout(new GridLayout(3,1,10,10));
		frameFilm.setLocationRelativeTo(null);
		
		
		//Declares Variables For Frame
		String releaserYearL;
//		ArrayList<String>releaserYearAL = new ArrayList<String>();
//		
//		Statement myStmtement_get_releaseYear = myConnection.createStatement();
//		myResult = myStmtement_get_releaseYear.executeQuery("SELECT distinct release_year FROM sakila.film;");
//		ResultSetMetaData metaData = myResult.getMetaData();
//		int year_Columns = metaData.getColumnCount();
//		int j=0;
//		while(myResult.next())
//		{
//			for(int i = 1; i <= year_Columns; i++)
//			{
//				//inner for loop handles printing to screen
//				System.out.printf("%-8s\t\t", myResult.getString(i));
//				
//				
//				releaserYearAL.add(myResult.getString(i));
//				
//				j++;
//			}//end for
//			//line feed
//			System.out.println();
//			
//		}//end while
//		//Converting array list to array 
//		releaserYearL = releaserYearAL.toArray(new String[0]);
		
		//populating the string Array-> 
		//String[] langaguesL = new String[6];
		ArrayList<String>langaguesAL = new ArrayList<String>();
		String[] langaguesL;
		 
		
		Statement myStmtement2 = myConnection.createStatement();
		myResult = myStmtement2.executeQuery("SELECT name FROM sakila.language;");
		ResultSetMetaData metaData = myResult.getMetaData();
		int numColumns = metaData.getColumnCount();
		//int i = 0;
		int j=0;
		while(myResult.next())
		{
			for(int i = 1; i <= numColumns; i++)
			{
				//inner for loop handles printing to screen
				System.out.printf("%-8s\t\t", myResult.getObject(i));
				
				langaguesAL.add((String) myResult.getObject(i));
				
				j++;
			}//end for
			//line feed
			System.out.println();
			
		}//end while
		//Converting array list to array 
		langaguesL = langaguesAL.toArray(new String[0]);
		//myStmtement2.close();
		
		String[] Speical_options= {"Trailers","Commentaries","Deleted","Behind the Scenes"};
		
		String[] rentalDurationL = {"3","4","5","6","7"};
		String[] ratingL = {"G","PG","14A","18A","R"};
		
		
		
		//creates the panels and adds them to frame
		JPanel filmPanelTop = new JPanel(new GridLayout(1,1));
		JPanel filmPanelContent = new JPanel(new GridLayout(9,2));
		JPanel filmPanelBot = new JPanel(new GridLayout(3,1));
		frameFilm.add(filmPanelTop);
		frameFilm.add(filmPanelContent);
		frameFilm.add(filmPanelBot);
		
		//Create the GUI elements
		JLabel lbl_fTitle = new JLabel("Please enter the info for the new film then add the actors");
		JLabel lbl_fTitle2 = new JLabel("Title:");
		JLabel lbl_fDescription = new JLabel("Description:");
		JLabel lbl_fYear = new JLabel("Release year:");
		JLabel lbl_fLangauge = new JLabel("Language:");
		JLabel lbl_fRentalDuration = new JLabel("Rental Duration:");
		JLabel lbl_fLenght = new JLabel("Length:");
		JLabel lbl_fReplacementCost = new JLabel("Replacement Cost:");
		JLabel lbl_fRatting = new JLabel("Film Rating:(PG,G,R,NC-17,PG-13)");
		JLabel lbl_fSpecialFeatures = new JLabel("Special Features:");
		JTextField tf_fTitle = new JTextField();
		JTextField tf_fDescription = new JTextField();
		JTextField tf_fLength = new JTextField();
		JTextField tf_fRCost = new JTextField();
		JTextField tf_yearList = new JTextField();
		JComboBox<?> cb_langaugeList = new JComboBox<Object>(langaguesL);
		JComboBox<?> cb_rDurationList = new JComboBox<Object>(rentalDurationL);
		JComboBox<?> cb_Rating = new JComboBox<Object>(ratingL);
		JComboBox<?> cb_spOption = new JComboBox<Object>(Speical_options);
		JButton btn_fAddA = new JButton("Add Actor");
		JButton btn_fAddF = new JButton("Add Film");
		JButton btn_fToMain = new JButton("Back to Main");
		
		
		//adds the elements to the panels
		filmPanelTop.add(lbl_fTitle);
		filmPanelContent.add(lbl_fTitle2);
		filmPanelContent.add(tf_fTitle);
		filmPanelContent.add(lbl_fDescription);
		filmPanelContent.add(tf_fDescription);
		filmPanelContent.add(lbl_fYear);
		filmPanelContent.add(tf_yearList);
		filmPanelContent.add(lbl_fLangauge);
		filmPanelContent.add(cb_langaugeList);
		filmPanelContent.add(lbl_fRentalDuration);
		filmPanelContent.add(cb_rDurationList);
		filmPanelContent.add(lbl_fLenght);
		filmPanelContent.add(tf_fLength);
		filmPanelContent.add(lbl_fReplacementCost);
		filmPanelContent.add(tf_fRCost);
		filmPanelContent.add(lbl_fRatting);
		filmPanelContent.add(cb_Rating);
		filmPanelContent.add(lbl_fSpecialFeatures);
		filmPanelContent.add(cb_spOption);
		
		filmPanelBot.add(btn_fAddA);
		filmPanelBot.add(btn_fAddF);
		filmPanelBot.add(btn_fToMain);
		
		//disableing buttons
		btn_fAddA.setEnabled(false);
		
	    //------------------------------------
	    //Add Film Button
	  	//add an Film to the database
	  	//------------------------------------
	    btn_fAddF.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev) 
	        {
	    		btn_fAddF.setEnabled(false);
	    		btn_fAddA.setEnabled(true);
	    		String langiage_selected = (String) cb_langaugeList.getSelectedItem();
	    		String selected_year = tf_yearList.getText();
	    		int selected_year_int = Integer.parseInt(selected_year);
	    		int selected_length = Integer.parseInt( tf_fLength.getText());
	    		double selected_replacemnt_cost = Double.parseDouble( tf_fRCost.getText());
	    		String selected_duration = (String)cb_rDurationList.getSelectedItem();
	    		String selected_rating_cb= (String)cb_Rating.getSelectedItem();
	    		int selected_duration_int = Integer.parseInt(selected_duration);
	    		double rentalrate = 4.99;
	    		String selected_Feture_option_object= (String) cb_spOption.getSelectedItem();
	    		Statement statement_add_movie= null;
	    		if(selected_year_int < Calendar.getInstance().get(Calendar.YEAR))
	    		{
	    			rentalrate=2.99;
	    		}
	    		else if(selected_year_int < (Calendar.getInstance().get(Calendar.YEAR)-5))
	    		{
	    			rentalrate= 0.99;
	    		}
	    		
	    		//Getting Language id From Language Table
	    		Connection film_connection = null;
	    		try 
	    		{
		    		film_connection = DriverManager.getConnection(
					         "jdbc:mysql://localhost:3306/sakila?useSSL=false&allowPublicKeyRetrieval=true", 
					                       "root","password");
		    		myStmtement = film_connection.createStatement();
		    		int language_id=0;
					myResult = myStmtement.executeQuery("SELECT language_id FROM sakila.language where name = '"+langiage_selected+"';");
					while (myResult.next()) {
						language_id = myResult.getInt("language_id");	
						System.out.println(language_id);
					}
					
					
					//myResult = myStmtement.executeQuery("SELECT film_id FROM sakila.film WHERE title = \""+tf_fTitle.getText()+"\"");
					//String query_add_film= "INSERT INTO sakila.film(`title`,`description`,`release_year`,`language_id`,`original_language_id`,`rental_duration`,`rental_rate`,`length`,`replacement_cost`,`rating`,`special_features`)VALUES( '"+tf_fTitle.getText()+"' ,'"+tf_fDescription.getText()+"' ,"+selected_year_int+","+language_id+","+language_id+","+selected_duration_int+","+rentalrate+","+selected_length+" ,"+selected_replacemnt_cost+", '"+tf_Rating.getText()+"','"+tf_sepcial_fetured.getText()+"');INSERT INTO sakila.inventory(film_id,store_id)VALUES((SELECT film_id FROM sakila.film WHERE title = \""+tf_fTitle.getText()+"\"),1);";
					String query_add_film= "INSERT INTO sakila.film(`title`,`description`,`release_year`,`language_id`,`original_language_id`,`rental_duration`,`rental_rate`,`length`,`replacement_cost`,`rating`,`special_features`)VALUES( '"+tf_fTitle.getText()+"' ,'"+tf_fDescription.getText()+"' ,"+selected_year+","+language_id+","+language_id+","+selected_duration_int+","+rentalrate+","+selected_length+" ,"+selected_replacemnt_cost+", '"+selected_rating_cb+"','"+selected_Feture_option_object+"');";
					statement_add_movie= film_connection.createStatement();
					statement_add_movie.executeUpdate(query_add_film);
					
					myResult = myStmtement.executeQuery("SELECT film_id FROM sakila.film WHERE title = \""+tf_fTitle.getText()+"\"");
					
					int film_id_= 0;
					while (myResult.next()) {
						film_id_ = myResult.getInt("film_id");	
						System.out.println(film_id_);
					}
					
					String query_add_films_Inventory = "INSERT INTO sakila.inventory(film_id,store_id)VALUES("+film_id_+",1);";
					statement_add_movie= film_connection.createStatement();
					statement_add_movie.executeUpdate(query_add_films_Inventory);
					
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	    		finally {
	    			if(film_connection!= null)
	    			{
	    				try {
							film_connection.close();
						} catch (SQLException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
	    			}
	    		}
	    		
	    		
	    		
	        }
	    });
		
		
		
		
		//------------------------------------
	    //-----------Rental Frame-------------
	    //------------------------------------
		
		//variable list
		String [] inventoryList = new String[1000];
		String [] customerList = {};
		String [] staffList = {};
		
		//Sql Code To Get Inventory, Customer and Staff id
	 
		//----------------------------------------------
		
		
		//boiler plate code
		JFrame frameRental = new JFrame("Movie Rentals");
		frameRental.setSize(500,300);
		frameRental.setLayout(new GridLayout(3,1,10,10));
		frameRental.setLocationRelativeTo(null);
		
		//creates panels and adds them to the frame
		JPanel rentalPanelTop = new JPanel(new GridLayout(1,1));
		JPanel rentalPanelContent = new JPanel(new GridLayout(5,2));
		JPanel rentalPanelBot = new JPanel(new GridLayout(2,1));
		
//		myStmtement = myConnection.createStatement();
//
//        myResult = myStmtement.executeQuery("SELECT title FROM sakila.film;");
//
//        ResultSetMetaData metaDataI = myResult.getMetaData();
//        int numColumnsI = metaDataI.getColumnCount();
//        //int i = 0;
//        int j2=0;
//        while(myResult.next())
//        {
//            for(int i = 1; i <= numColumnsI; i++)
//            {
//                //inner for loop handles printing to screen
//                System.out.printf("%-8s\t\t", myResult.getObject(i));
//
//                inventoryList[j2] = (String) myResult.getObject(i);
//                j2++;
//            }//end for
//            //line feed
//
//        }//end while
		
		
		frameRental.add(rentalPanelTop);
		frameRental.add(rentalPanelContent);
		frameRental.add(rentalPanelBot);
		
		//Creates elements
		JLabel lbl_rentTitle = new JLabel("Enter the information for the Rental:");
		JLabel lbl_rentCustId = new JLabel("Film Id:");
		JLabel lbl_rentInvId = new JLabel("Customer Id:");
		JLabel lbl_rentStaffId = new JLabel("Staff Id:");
		JComboBox<?> cb_iventoryList = new JComboBox<Object>(inventoryList);
		JTextField tf_rentCustId = new JTextField();
		JTextField tf_rentStaffId = new JTextField();
		JButton btn_rentAddRental = new JButton("Add Rental");
		JButton btn_rentToMain = new JButton("Back to Main");
		
		//adds elements From Frames
		rentalPanelTop.add(lbl_rentTitle);
		rentalPanelContent.add(lbl_rentCustId);
		rentalPanelContent.add(tf_rentCustId);
		rentalPanelContent.add(lbl_rentInvId);
		rentalPanelContent.add(cb_iventoryList);
		rentalPanelContent.add(lbl_rentStaffId);
		rentalPanelContent.add(tf_rentStaffId);
		rentalPanelBot.add(btn_rentAddRental);
		rentalPanelBot.add(btn_rentToMain);

		//------------------------------------
	    //-----------Report Frame-------------
	    //------------------------------------
		
		//boiler plate code
		JFrame frameReport = new JFrame("Rental Income");
		frameReport.setSize(800,500);
		frameReport.setLayout(new GridLayout(3,1,10,10));
		frameReport.setLocationRelativeTo(null);
		
		//Varaibles for Frame
		String[] StoreL = {"Canada Location", "Austrailia Loacation", "Both Locations"};
		
		//Creates the panels and adds them to the frame
		JPanel reportPanelTop = new JPanel(new GridLayout(1,1));
		JPanel reportPanelContent = new JPanel(new GridLayout(2,1));
		JPanel reportPanelBot = new JPanel(new GridLayout(4,1));
		frameReport.add(reportPanelTop);
		frameReport.add(reportPanelContent);
		frameReport.add(reportPanelBot);
		
		//create Gui elements
		JLabel lbl_rTitle = new JLabel("Please Select a Report");
		JTextArea txa_rTextOutput = new JTextArea(25,10);
		JComboBox<?> cb_rStore = new JComboBox<Object>(StoreL);
		JButton btn_rAllIncome = new JButton("Income For All rentals");
		JButton btn_rCatIncome = new JButton("All Rentals Dy Category");
		JButton btn_rDateIncome = new JButton("All Rentals by Date");
		JButton btn_rToMain = new JButton("Back to Main");
			
		//adds the elements to the panels
		reportPanelTop.add(lbl_rTitle);
		reportPanelContent.add(txa_rTextOutput);
		reportPanelContent.add(cb_rStore);
		reportPanelBot.add(btn_rAllIncome);
		reportPanelBot.add(btn_rCatIncome);
		reportPanelBot.add(btn_rDateIncome);
		reportPanelBot.add(btn_rToMain);
		
		//END of frame Declaration
		//------------------------
		
		
		frameMain.setVisible(true);
	    
		
	    //------------------------------------
		//Customer Button
		//Opens the Customer Frame
	    //------------------------------------
	    btnCustomer.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		  frameMain.setVisible(false);
	 	          frameCust.setVisible(true);
	        }
	    });
	    
	    //------------------------------------
	    //Actor Button
	  	//Opens the Actor Frame
	  	//------------------------------------
	    btnActor.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		frameMain.setVisible(false);
	    		frameActor.setVisible(true);
	        }
	    });
	    
	    //------------------------------------
	    //Film Button
	  	//Opens the Film Frame
	  	//------------------------------------
	    btnFilm.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		frameMain.setVisible(false);
	    		frameFilm.setVisible(true);
	    		btn_fAddF.setEnabled(true);
	    		btn_fAddA.setEnabled(false);
	    		
	        }
	    });
	    
	    //------------------------------------
	    //Rental Button
	  	//Opens the Rental Frame
	  	//------------------------------------
	    btnRental.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		frameMain.setVisible(false);
	    		frameRental.setVisible(true);
	        }
	    });
	    
	    //------------------------------------
	    //Report Button
	  	//Opens the Report Frame
	  	//------------------------------------
	    btnReport.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		frameMain.setVisible(false);
	    		frameReport.setVisible(true);
	        }
	    });
	    
	    
	    //-----------------------------------
	    //END OF MAIN BUTTONS 
	    //-----------------------------------
	    
	    
	    //------------------------------------
	    // Customer Back to main Button
	  	//Hides all frames and opens the main Frame
	  	//------------------------------------
	    btn_cToMain.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	         frameMain.setVisible(true);
	         frameCust.setVisible(false);
	        }
	    });
	    
	    //------------------------------------
	    //Actor Back to main Button
	  	//Hides all frames and opens the main Frame
	  	//------------------------------------
	    btn_aToMain.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	         frameMain.setVisible(true);
	         frameActor.setVisible(false);
	        }
	    });
	   
	    //------------------------------------
	    //Film Back to main Button
	  	//Hides all frames and opens the main Frame
	  	//------------------------------------
	    btn_fToMain.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		
	         frameMain.setVisible(true);
	         frameFilm.setVisible(false);
	        }
	    });
	    
	    //------------------------------------
	    //Rentals Back to main Button
	  	//Hides all frames and opens the main Frame
	  	//------------------------------------
	    btn_rentToMain.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		
	         frameMain.setVisible(true);
	         frameRental.setVisible(false);
	        }
	    });
	    
	    //------------------------------------
	    //Report Back to main Button
	  	//Hides all frames and opens the main Frame
	  	//------------------------------------
	    btn_rToMain.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		
	         frameMain.setVisible(true);
	         frameReport.setVisible(false);
	         
	        }
	    });
	   
	    
	   
	 
	    //------------------------------------
	    //Add Actor to film popup Button
	  	//add an actor to the database
	  	//------------------------------------
	    btn_fAddA.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		popupActor.setVisible(true);
	        }
	    });
	    
	    
	    //------------------------------------
	    //Popup done Button
	  	//add an Film to the database
	  	//------------------------------------
	    btn_pDone.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    		popupActor.setVisible(false);
	        }
	    });
	    
	    //------------------------------------
	    //Popup done Button
	  	//add an Film to the database
	  	//------------------------------------
	    btn_cAdd.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    	
	        }
	    });
	    
	    btn_rentAddRental.addActionListener(new ActionListener()
	    { 
	    	public void actionPerformed(ActionEvent ev)
	        {
	    	
	        }
	    });
	    
		}//end try
		catch(SQLException ex)
		{
			System.out.println("SQL Exception, message is: " + ex.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println("Some other Exception, message is: " + ex.getMessage());
		}
		finally
		{//Clean up and finally implemantation 
			
			try
			{
				if(myResult != null)
				  myResult.close();
				if(myStmtement != null)
					myStmtement.close();
				if(myConnection != null)
				  myConnection.close();	
			}//end try
			catch(SQLException ex)
			{
				System.out.println("SQLException INSIDE finally block: "+ ex.getMessage());
				ex.printStackTrace();
			}
		}//end finally
	    
	        
	}//end of Main

}//end of main class
